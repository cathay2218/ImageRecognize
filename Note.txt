Anaconda Useful Command
	Show Conda Version: conda -V
	Show Environment List: conda env list
	
	Create Environment: conda create -n [EnvName]
	Copy Environment: conda create -n [EnvName] --clone [EnvNameSource]
	Activte Environment: conda activate [EnvName]
	DeActivate Environment: conda deactivate
	Remove Environment: conda env remove -n [EnvName]
	
	Install Package to Environment: pip install [PackageName]
	Remove Package from Environment: pip uninstall [PackageName]
--------------------------------------------------------------
Install Anaconda Management Suite
	Run Installer as Administrator
		Set: Install for "Just Me"
		Set: Install Path
		Advanced Options Set Default
		Install and Finish
--------------------------------------------------------------
Build Devlope Environment for Dlib (CPU Version)
	Run Conda Prompt or PowerShell
	Create Environment
		Command: conda create -n [EnvName] python=3.6.12
	Activte Environment
		Command: conda activate [EnvName]
	Install Dependent Package
		Command: conda install pip				#install pip, if needed
		Command: pip install numpy
		Command: pip install scipy
		Command: pip install matplotlib
		Command: pip install scikit-learn
		Command: pip install jupyter
		Command: pip install opencv-python
		Command: pip install dlib==19.8.1
		Command: pip install imutils
		Command: pip install scikit-image		#for Generate HOG SVM Characteristic File
	Verify Version
		Enter Python Interpreter
			Command: python
		Verify Python Version
			Command: import sys
			Command: sys.version
			Show: '3.6.12' (Or Other Install Version)
		Verify OpenCV Version
			Command: import cv2
			Command: cv2.__version__
			Show: '4.5.1' (or Newer)
		Verify Dlib Version
			Command: import dlib
			Command: dlib.__version__
			Show: '19.8.1' (Must Be)
		Leave Python Interpreter
			Command: quit()
	DeActivte Environment
		Command: conda deactivate
--------------------------------------------------------------
Install Spyder IDE
	Run Anaconda Navigator
	Switch Environment
	Click Spyder IDE Install Button
	Wait Finish for Automatic Install
Cancel Vertical Line at Edit Section
	Run Anaconda Navigator
	Switch Environment
	Run Spyder IDE
	Select: Tool → Preferences → Completion and linting → Code style and formatting → 
			Line length → Cancel Check: Show vertical line at that length
--------------------------------------------------------------
Run Program
	Run Conda Prompt or PowerShell
	Activte Environment
		Command: conda activate [EnvName]
	Excute Program
		Command: python [Script Route]
--------------------------------------------------------------		
Distribute Program
	Run Conda Prompt or PowerShell
	Activte Environment
		Command: conda activate [EnvName]
	Install Dependent Package
		Command: pip install pyinstaller
	Encapsulation Script to Excutable File
		Command: pyinstaller -F [Script Route] 
--------------------------------------------------------------
In Standard Input/Output, Python Default Encode is ASCII, 
if Program Script Contain Chinese Character, you Need to Add Encode Condition like Below at Script Beginning (Line 1).
	# coding=utf-8
--------------------------------------------------------------
Dlib Face Direction Sub-Detector Index
	Front: Return Value = 0
	Face Right(Face Left in Image):	Return Value = 1 (Mirror Mode = 2)
	Face Left(Face Right in Image):	Return Value = 2 (Mirror Mode = 1)
	Face Right Oblique[/](Face Left Oblique[\] in Image):	Return Value = 3 (Mirror Mode = 4)
	Face Left Oblique[\](Face Right Oblique[/] in Image):	Return Value = 4 (Mirror Mode = 3)
--------------------------------------------------------------
Install YOLO v5 Package

Equipment
    GPU = Nvidia GeForce GTX 1650
        Calculate Capability = 7.5, CUDA version support 10.0 up
    GPU Drive Version = 457.09
    GPU Memory = 2048 MB
    CUDA Core = 896

Requirements
    Python 3.8up
    Pytorch 1.5up
    Nvidia CUDA 10.2 Only and cuDNN 8.1.0.77
    OpenCV 4.5.1
    YOLOv5 Source Code (Download via Github)

Install Visual Studio 2015
    Change to Optional Mode and Select "Visual C++", Keep Other Default
Install Nvidia CUDA Toolkit 10.2
    Change to Optional Mode and Select "CUDA" Only
	Copy cuDNN File to CUDA Toolkit Directory
    Verify CUDA Version
        Open Cmd Prompt
        Command: nvcc -V
        Show: Cuda compilation tools, release 10.2, V10.2.89
Create YOLOv5 Python Environment
    Create Environment
		Command: conda create -n YOLOv5 python=3.8
    Activate Environment
		Command: conda activate YOLOv5
	Install Package Management Kit
		Command: conda install git
		Command: conda install pip (if needed)
    Install OpenCV
		At Anaconda Navigator, Switch Tag to Environment, Select YOLOv5 Env, Click "Update Index"
		DropDownList Select to "All" and Search 'opencv', Install All Search Result
		(libopencv, opencv, py-opencv)
	Install Pytorch and CUDA Kit
		Command: conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch
	Download YOLOv5 Source Code via Github
		Command: git clone https://github.com/ultralytics/yolov5.git
    Install YOLOv5 Kit
		Command: cd yolov5
		Command: pip install -U -r requirements.txt
	Test YOLOv5 Function (Attention to Execution Directory Path)
		python [detect.py Path] --source [Image Source] --weights [Weights File Path]
		python C:\Users\TRTC\yolov5\detect.py --source rtsp://admin:9999@10.9.0.102:8557/PSIA/Streaming/channels/2?videoCodecType=H.264 --weights weights/yolov5x.pt
		python C:\Users\TRTC\yolov5\detect.py --source D:\ImageRecognize\Github\Sample\SampleImage.jpg --weights weights/yolov5x.pt
		python detect.py --source rtsp://admin:9999@10.9.0.102:8557/PSIA/Streaming/channels/2?videoCodecType=H.264 --weights weights/yolov5x.pt
		
    Function Argument
        --source [Source] : Image or Stream Input Path
        --weights [weights file] : Recognize Weights File Path
        --device [0 | cpu] : 0 = GPU for CUDA / cuDNN Calculate; cpu = CPU Calculate
Finish

Camera Setting
    Stream: Single
    Video Formate: H.264
    Resolution: 720p
    FPS: 30
    Bitrate: 2500 / VBR
    
    
    
--------------------------------------------------------------
PyQt5 Package Install
    at env:
        pip install PyQt5
        
        
        
--------------------------------------------------------------
LabelImg 安裝
在有PyQt5的env中
    pip install labelimg
執行
在有PyQt5的env中
    labelimg